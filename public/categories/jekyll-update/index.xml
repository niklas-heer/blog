<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jekyll Update on Niklas&#39; Blog</title>
    <link>http://localhost:1313/categories/jekyll-update/</link>
    <description>Recent content in Jekyll Update on Niklas&#39; Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 30 Nov 2014 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/categories/jekyll-update/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Hello Jekyll!</title>
      <link>http://localhost:1313/2014/11/30/hello-jekyll</link>
      <pubDate>Sun, 30 Nov 2014 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/2014/11/30/hello-jekyll</guid>
      <description>

&lt;p&gt;I changed my blog from &lt;a href=&#34;https://wordpress.org/&#34;&gt;Wordpress&lt;/a&gt; to &lt;a href=&#34;http://jekyllrb.com&#34;&gt;Jekyll&lt;/a&gt;!&lt;/p&gt;

&lt;h2 id=&#34;why-i-switched-to-jekyll:d5a808063d1d9dde412fd5be3cf23a83&#34;&gt;Why i switched to Jekyll&lt;/h2&gt;

&lt;p&gt;I was thinking about switching from &lt;a href=&#34;https://wordpress.org/&#34;&gt;Wordpress&lt;/a&gt; to something else for quite a while, but I didn&amp;rsquo;t find anything I really liked.&lt;/p&gt;

&lt;p&gt;First I thought about switching my blog to a self made &lt;a href=&#34;http://laravel.com/&#34;&gt;Laravel&lt;/a&gt; site, but it&amp;rsquo;s kind of reinventing the wheel.
It&amp;rsquo;s a lot of work and is still open to bugs and exploits and therefore has to be updated really often - which I was not willing to do and also didn&amp;rsquo;t had the time for to do.
Also I still would have PHP Code which to be totally honest I don&amp;rsquo;t really like because it is really slow in comparison to &lt;a href=&#34;http://www.nodejs.org/&#34;&gt;Node.js&lt;/a&gt; or &lt;a href=&#34;https://golang.org/&#34;&gt;Go&lt;/a&gt; code.&lt;/p&gt;

&lt;p&gt;My second thought was to implement my blog in &lt;a href=&#34;https://golang.org/&#34;&gt;Go&lt;/a&gt;. Yay! The response time would be amazing and I sure would learn a lot - given I only played around with &lt;a href=&#34;https://golang.org/&#34;&gt;Go&lt;/a&gt; so far.
But then again - a lot of overhead, fast out-of-date and time-consuming to maintain.&lt;/p&gt;

&lt;p&gt;At first I was against static site generation.&lt;/p&gt;

&lt;p&gt;I search a while and read a little bit more about static site generation and the more I thought about it the more it became clear to me: &amp;ldquo;This is the way to go.&amp;rdquo;&lt;/p&gt;

&lt;p&gt;Static site generation was the key to the cons I had previously had against other solution. No security risks, because it is &amp;ldquo;only&amp;rdquo; HTML and no code is compiled on the server at runtime. No overhead - there are a lot of great static site generators out here and it would be - once set up - really fast to write articles and publish them.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Okay, so where to start?&lt;/em&gt; &lt;br&gt;
There is &lt;a href=&#34;http://blog.getpelican.com/&#34;&gt;Pelican&lt;/a&gt;, &lt;a href=&#34;http://picocms.org/&#34;&gt;Pico&lt;/a&gt;, &lt;a href=&#34;http://getnikola.com/&#34;&gt;Nikola&lt;/a&gt; and of course &lt;a href=&#34;http://jekyllrb.com&#34;&gt;Jekyll&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;So I looked at them all with the following requirements:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;easy to use&lt;/li&gt;
&lt;li&gt;can import my post from &lt;a href=&#34;https://wordpress.org/&#34;&gt;Wordpress&lt;/a&gt; (would turn out as a &amp;lsquo;biggy&amp;rsquo;)&lt;/li&gt;
&lt;li&gt;support &lt;a href=&#34;https://help.github.com/articles/github-flavored-markdown/&#34;&gt;Markdown&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;actively maintained&lt;/li&gt;
&lt;li&gt;easy way to preview my work before uploading it to any server&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;nikola-nikola-br:d5a808063d1d9dde412fd5be3cf23a83&#34;&gt;&lt;strong&gt;&lt;a href=&#34;http://getnikola.com/&#34;&gt;Nikola&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;&lt;/h3&gt;

&lt;p&gt;I started with &lt;a href=&#34;http://getnikola.com/&#34;&gt;Nikola&lt;/a&gt; because it seemed like the perfect fit to me. It met all my requirements and also was very easy to install on &lt;a href=&#34;https://www.archlinux.org/&#34;&gt;ArchLinux&lt;/a&gt; (&lt;code&gt;yaourt -S python-nikola-git&lt;/code&gt;).
So I headed right into it made a new git repo and &lt;code&gt;nikola init&lt;/code&gt; to start a new &lt;a href=&#34;http://getnikola.com/&#34;&gt;Nikola&lt;/a&gt; instance.
Okay now let&amp;rsquo;s import my &lt;a href=&#34;https://wordpress.org/&#34;&gt;Wordpress&lt;/a&gt; posts.&lt;br&gt;
I made exported my posts from within &lt;a href=&#34;https://wordpress.org/&#34;&gt;Wordpress&lt;/a&gt; thought a XML file and executed &lt;a href=&#34;http://getnikola.com/&#34;&gt;Nikolas&lt;/a&gt; built-in import method &lt;code&gt;nikola import_wordpress posts.xml&lt;/code&gt;. Wow, that was easy.
Nope. Error. Damn it! &lt;a href=&#34;https://duckduckgo.com/&#34;&gt;DuckDuckGo&lt;/a&gt; to the rescue!
Okay installed &lt;a href=&#34;http://getnikola.com/&#34;&gt;Nikola&lt;/a&gt; from source on Github. Still that Error.
After a few hours of fumbling around I admitted defeat and moved on the the next generator on my list.&lt;/p&gt;

&lt;h3 id=&#34;pelican-pelican-br:d5a808063d1d9dde412fd5be3cf23a83&#34;&gt;&lt;strong&gt;&lt;a href=&#34;http://blog.getpelican.com/&#34;&gt;Pelican&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;&lt;/h3&gt;

&lt;p&gt;Aswell as &lt;a href=&#34;http://getnikola.com/&#34;&gt;Nikola&lt;/a&gt;, &lt;a href=&#34;http://blog.getpelican.com/&#34;&gt;Pelican&lt;/a&gt; checked off everything on my list so i also installed it. This time through &lt;a href=&#34;https://pypi.python.org/pypi/pip/&#34;&gt;pip&lt;/a&gt;. Just for funsies.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install pelican markdown
pelican-quickstart
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Okay so now let&amp;rsquo;s import it.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pelican-import --wpfile --dir-page -o content -m markdown posts.xml
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Cool, so far so good let&amp;rsquo;s look at my files.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python -m SimpleHTTPServer
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Doesn&amp;rsquo;t work. Mhmmm&amp;hellip; let&amp;rsquo;s try Python2.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python2 -m SimpleHTTPServer
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Eureka! Long story short I really didn&amp;rsquo;t like the way theming works in &lt;a href=&#34;http://blog.getpelican.com/&#34;&gt;Pelican&lt;/a&gt;. Although I thought I could live with that, there where still some alternatives on my list and I thought: &amp;ldquo;Better make sure you like it, because you&amp;rsquo;ll be using it for quite a while!&amp;rdquo;&lt;/p&gt;

&lt;h3 id=&#34;pico-pico-br:d5a808063d1d9dde412fd5be3cf23a83&#34;&gt;&lt;strong&gt;&lt;a href=&#34;http://picocms.org/&#34;&gt;Pico&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;&lt;/h3&gt;

&lt;p&gt;Okay so I started on &lt;a href=&#34;http://picocms.org/&#34;&gt;Picos&lt;/a&gt; website. Oh my.. PHP? Why? Oh boy, now I have to set up a complete web developing environment for a &amp;ldquo;simple&amp;rdquo; static site generator? Nah!&lt;br&gt;
So I searched for lightweight Web-Servers for in-place use.&lt;br&gt;
I discovered &lt;a href=&#34;http://code.ravelsoft.com/node-sng&#34;&gt;node-sng&lt;/a&gt; and thanks to &lt;a href=&#34;https://www.archlinux.org/&#34;&gt;Arch&lt;/a&gt; it was also easy to install.&lt;/p&gt;

&lt;p&gt;But at this point I thought I just drop &lt;a href=&#34;http://picocms.org/&#34;&gt;Pico&lt;/a&gt; because it is not practical for me and thus I wouldn&amp;rsquo;t use it for long.&lt;/p&gt;

&lt;h3 id=&#34;jekyll-jekyll-br:d5a808063d1d9dde412fd5be3cf23a83&#34;&gt;&lt;strong&gt;&lt;a href=&#34;http://jekyllrb.com&#34;&gt;Jekyll&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;&lt;/h3&gt;

&lt;p&gt;Let&amp;rsquo;s try the clear mainstream option. Nice checks off everything on my list.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;gem update
gem install jekyll
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Nice! So let&amp;rsquo;s import everything. &lt;a href=&#34;http://import.jekyllrb.com/docs/wordpressdotcom/&#34;&gt;Awesome Doc&lt;/a&gt; is awesome!&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ruby -rubygems -e &#39;require &amp;quot;jekyll-import&amp;quot;;
    JekyllImport::Importers::WordpressDotCom.run({
      &amp;quot;source&amp;quot; =&amp;gt; &amp;quot;wordpress.xml&amp;quot;,
      &amp;quot;no_fetch_images&amp;quot; =&amp;gt; false,
      &amp;quot;assets_folder&amp;quot; =&amp;gt; &amp;quot;assets&amp;quot;
    })&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Mhm.. now my posts are still in HTML - I want them in &lt;code&gt;.md&lt;/code&gt; format. Okay Bash-Script to the rescue! (you need &lt;a href=&#34;http://johnmacfarlane.net/pandoc/installing.html&#34;&gt;pandoc&lt;/a&gt; to use this script)&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;#!/bin/bash
FILES=/home/nh/Desktop/posts/*
MDFOLDER=/home/nh/Desktop/mdfiles/
for f in $FILES
do
    completename=&amp;quot;${f##*/}&amp;quot;          # complete file name with .ext
    filename=&amp;quot;${completename%.*}&amp;quot;    # name without .ext
    mdname=&amp;quot;$filename.md&amp;quot;            # lets add .md extension

    pathToMd=&amp;quot;$MDFOLDER$mdname&amp;quot;      # define the output path

    # Let&#39;s rock!
    echo &amp;quot;Processing $mdname&amp;quot;
    pandoc -s &amp;quot;$f&amp;quot; -o &amp;quot;$pathToMd&amp;quot;
done
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Awesome! Let&amp;rsquo;s compile them and look at what I&amp;rsquo;ve got so far.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;jekyll serve -w
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Oh it looks kind of messy. The file header it not right. Okay I will go through my posts I also need to change some image urls and stuff.&lt;br&gt;
Nice auto-compile function! While we&amp;rsquo;re at it let&amp;rsquo;s also install a &lt;a href=&#34;https://mademistakes.com/articles/hpstr-jekyll-theme/&#34;&gt;nice theme&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Here are some useful code-blocks:
&lt;script type=&#34;text/javascript&#34; src=&#34;http://gist.github.com/25336b9b6758a35b720b.js&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;h2 id=&#34;conclusion:d5a808063d1d9dde412fd5be3cf23a83&#34;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;Although it was quite some time editing 60+ posts I really like the result and you may like it too! I&amp;rsquo;m really glad I took the journey to discover &lt;a href=&#34;http://jekyllrb.com&#34;&gt;Jekyll&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This very article is my first one completely written in &lt;a href=&#34;http://jekyllrb.com&#34;&gt;Jekyll&lt;/a&gt; on my beloved &lt;a href=&#34;http://www.sublimetext.com/&#34;&gt;SublimeText-Editor&lt;/a&gt; with some Plugins. (&lt;a href=&#34;https://sublime.wbond.net/packages/Jekyll&#34;&gt;Jekyll&lt;/a&gt;, &lt;a href=&#34;https://sublime.wbond.net/packages/Markdown%20Preview&#34;&gt;Markdown Preview&lt;/a&gt; and &lt;a href=&#34;https://sublime.wbond.net/packages/MarkdownEditing&#34;&gt;Markdown​Editing&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;I hope I gave you some insights in my journey and maybe you can save yourself some trouble and fist try &lt;a href=&#34;http://jekyllrb.com&#34;&gt;Jekyll&lt;/a&gt; before you end up digging through the entire internet to find a static site generator you like.&lt;/p&gt;

&lt;p&gt;Good luck! ;)&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>