<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Linux on Niklas&#39; Blog</title>
    <link>http://localhost:1313/tags/linux/</link>
    <description>Recent content in Linux on Niklas&#39; Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 05 Dec 2014 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/linux/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Jekyll - from zero to hero</title>
      <link>http://localhost:1313/2014/12/05/jekyll---from-zero-to-hero</link>
      <pubDate>Fri, 05 Dec 2014 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/2014/12/05/jekyll---from-zero-to-hero</guid>
      <description>

&lt;p&gt;&lt;center&gt;
    &lt;figure&gt;
        &lt;a href=&#34;http://localhost:1313/assets/images/2014-12-05/after.png&#34;&gt;&lt;img src=&#34;http://localhost:1313/assets/images/2014-12-05/after.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;
        &lt;figcaption&gt;my blog was never faster nor easier to deploy!&lt;/figcaption&gt;
    &lt;/figure&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;h2 id=&#34;deployment-via-git:abed85835c828a38e19690cbc75bb36d&#34;&gt;Deployment via git&lt;/h2&gt;

&lt;h3 id=&#34;the-local-repository:abed85835c828a38e19690cbc75bb36d&#34;&gt;The local repository&lt;/h3&gt;

&lt;p&gt;You can host your site on &lt;a href=&#34;https://about.gitlab.com/&#34;&gt;Gitlab&lt;/a&gt;, &lt;a href=&#34;https://github.com/&#34;&gt;Github&lt;/a&gt; or something else - just like I do.
But if you want to start from scratch you can make a folder and initialize git in it, after that you can copy over your Jekyll files.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mkdir jekyll &amp;amp;&amp;amp; cd jekyll
git init
cp -r /path/to/old_jekyll_folder /path/to/jekyll
git add .
git commit -am &amp;quot;initial commit.&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;the-remote-repository:abed85835c828a38e19690cbc75bb36d&#34;&gt;The remote repository&lt;/h3&gt;

&lt;p&gt;Now we need a new repository on your web-server, but it doesn&amp;rsquo;t need to be inside your web directory - just somewhere inside the system. I assume you have configured your public-key to work as a login and you also need write-privileges to the web directory with this user.&lt;br&gt;
First we need to initialize the repository:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;#Initialized empty Git repository in /home/nh/website.git/
mkdir website.git &amp;amp;&amp;amp; cd website.git
git init --bare
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then we need define a post-receive hook that checks out the latest changes into the web-servers DocumentRoot (this directory must exist; Git will not create it for you):&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;nano hooks/post-receive
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Put this inside the file:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;#!/bin/sh
GIT_WORK_TREE=/var/www/www.example.org git checkout -f
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;After that we need to enable the hook which will be triggered every time we push our changes to this repository. It will apply every commit to the directory which you have defined inside the post-receive hook.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;chmod +x hooks/post-receive
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We are now done on the server and we only need to set up the update process on the local system.&lt;/p&gt;

&lt;h3 id=&#34;the-update-process:abed85835c828a38e19690cbc75bb36d&#34;&gt;The update process&lt;/h3&gt;

&lt;p&gt;First we need to edit our git config file in our local repository to add the remote server.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;nano .git/config
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Add this to the file:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;[remote &amp;quot;production&amp;quot;]
    url = username@webserver:/home/nh/website.git
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;That&amp;rsquo;s it! Now you have set up your deployment! To deploy your jekyll changes is now as easy as this:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git push production
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;make-jekyll-fly:abed85835c828a38e19690cbc75bb36d&#34;&gt;Make jekyll fly&lt;/h2&gt;

&lt;blockquote&gt;
This is the fastest site I&#39;ve ever built.
&lt;/blockquote&gt;

&lt;p&gt;&lt;center&gt;
    &lt;figure class=&#34;half&#34;&gt;
        &lt;a href=&#34;http://localhost:1313/assets/images/2014-12-05/before.png&#34;&gt;&lt;img src=&#34;http://localhost:1313/assets/images/2014-12-05/before.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;
        &lt;a href=&#34;http://localhost:1313/assets/images/2014-12-05/after.png&#34;&gt;&lt;img src=&#34;http://localhost:1313/assets/images/2014-12-05/after.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;
        &lt;figcaption&gt;before and after&lt;/figcaption&gt;
    &lt;/figure&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;h3 id=&#34;optimizing-the-web-server:abed85835c828a38e19690cbc75bb36d&#34;&gt;Optimizing the web-server&lt;/h3&gt;

&lt;p&gt;Since I wanted to optimize my server I looked for a site which would allow me to test my servers performance and maybe also give me hints, than I found &lt;a href=&#34;http://tools.pingdom.com/fpt/#!/dG49JO/http://blog.niklas-heer.de&#34;&gt;pingdom&lt;/a&gt; which is a really good tool to test your site!&lt;/p&gt;

&lt;p&gt;First I installed &lt;a href=&#34;https://developers.google.com/speed/pagespeed/module&#34;&gt;Googles Pagespeed&lt;/a&gt; on my CentOS machine which was a &lt;a href=&#34;http://www.tecmint.com/install-mod_pagespeed-website-optimizer-for-apache-in-rhel-centos-and-fedora/&#34;&gt;fairly easy process&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Now I needed some optimization of my servers cache, for this I needed to use the &lt;code&gt;mod_expires&lt;/code&gt; module of my apache installation.&lt;br&gt;
I made a new file &lt;code&gt;/etc/httpd/conf.d/expires.conf&lt;/code&gt; with the following content:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-apache&#34;&gt;ExpiresActive On
ExpiresByType image/gif &amp;quot;access plus 1 month&amp;quot;
ExpiresByType image/png &amp;quot;access plus 1 month&amp;quot;
ExpiresByType image/jpeg &amp;quot;access plus 1 month&amp;quot;
ExpiresByType text/css &amp;quot;access plus 1 month&amp;quot;
ExpiresByType text/javascript &amp;quot;access plus 1 month&amp;quot;
ExpiresByType application/x-javascript &amp;quot;access plus 1 month&amp;quot;
ExpiresByType application/x-shockwave-flash &amp;quot;access plus 1 month&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;After that I edited my DNS entry to use &lt;a href=&#34;https://www.cloudflare.com&#34;&gt;CloudFlare&lt;/a&gt; which I &lt;em&gt;highly&lt;/em&gt; recommend to you!&lt;/p&gt;

&lt;p&gt;Now I have a really fast Apache web-server with caching and &lt;a href=&#34;https://www.cloudflare.com&#34;&gt;CloudFlare&lt;/a&gt; enabled.&lt;/p&gt;

&lt;h3 id=&#34;optimizing-pictures:abed85835c828a38e19690cbc75bb36d&#34;&gt;Optimizing pictures&lt;/h3&gt;

&lt;p&gt;You can make images smaller by using &lt;a href=&#34;https://github.com/toy/image_optim&#34;&gt;image_optim&lt;/a&gt;! This is a great tool and fairly simple to install:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;gem install image_optim image_optim_pack
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you want the full suit you also need to do this on ArchLinux:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yaourt -S pngout
sudo npm install -g svgo
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;After that you can simply go to the directory in which you stored your pictures and let &lt;a href=&#34;https://github.com/toy/image_optim&#34;&gt;image_optim&lt;/a&gt; run through all subdirectories and files recursively with this command:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# WARNING: This could take a while!
image_optim -r .
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;hiding-the-clutter:abed85835c828a38e19690cbc75bb36d&#34;&gt;Hiding the clutter&lt;/h2&gt;

&lt;p&gt;I have made an &lt;code&gt;.htaccess&lt;/code&gt; file for this reason, but since I have the opportunity to simply change the DocumentRoot to &lt;code&gt;_site&lt;/code&gt; I did that instead!&lt;br&gt;
Maybe it will help you!&lt;/p&gt;

&lt;p&gt;&lt;script type=&#34;text/javascript&#34; src=&#34;http://gist.github.com/f1392572c9f0469f2133.js&#34;&gt;&lt;/script&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>vtop an unknown terminal beauty</title>
      <link>http://localhost:1313/2014/12/01/vtop-an-unknown-terminal-beauty</link>
      <pubDate>Mon, 01 Dec 2014 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/2014/12/01/vtop-an-unknown-terminal-beauty</guid>
      <description>

&lt;blockquote&gt;
Wow such top. So stats. More better than regular top. Written in node.js
&lt;cite&gt;&lt;a href=&#34;https://parall.ax/vtop&#34;&gt;vtop&lt;/a&gt;&lt;/cite&gt;
&lt;/blockquote&gt;

&lt;p&gt;I&amp;rsquo;ve been using &lt;code&gt;top&lt;/code&gt; since I started maintaining a server in 2010. &lt;br&gt;
It&amp;rsquo;s a really powerful tool to glance at it and see if your system is alright, but since I discovered &lt;code&gt;htop&lt;/code&gt;, &lt;code&gt;top&lt;/code&gt; was made obsolete for me.&lt;/p&gt;

&lt;p&gt;Although I really liked &lt;code&gt;htop&lt;/code&gt; I always felt that it sometimes had a too clunky representation of the data, so that I couldn&amp;rsquo;t quickly enough see if my system was acting out of the common workload.&lt;/p&gt;

&lt;p&gt;Than I discovered &lt;code&gt;vtop&lt;/code&gt;! &lt;br&gt;
But let&amp;rsquo;s start at the beginning of my journey.&lt;/p&gt;

&lt;h3 id=&#34;why-not-simple-old-top:aea07f019cd63a19e48302eedde9dab8&#34;&gt;Why not simple old &lt;code&gt;top&lt;/code&gt;?&lt;/h3&gt;

&lt;p&gt;&lt;center&gt;
    &lt;figure class=&#34;half&#34;&gt;
        &lt;a href=&#34;http://localhost:1313/assets/images/2014-12-01/top.png&#34;&gt;&lt;img src=&#34;http://localhost:1313/assets/images/2014-12-01/top.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;
        &lt;a href=&#34;http://localhost:1313/assets/images/2014-12-01/htop.png&#34;&gt;&lt;img src=&#34;http://localhost:1313/assets/images/2014-12-01/htop.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;
        &lt;figcaption&gt;top vs htop&lt;/figcaption&gt;
    &lt;/figure&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;As you can guess from the pictures above &lt;code&gt;htop&lt;/code&gt; does really exactly the same as &lt;code&gt;top&lt;/code&gt;, but in a much nicer way so in my opinion there is no discussion about why you would choose &lt;code&gt;top&lt;/code&gt; over &lt;code&gt;htop&lt;/code&gt;!&lt;/p&gt;

&lt;h3 id=&#34;vtop-vtop-the-unknown-beauty:aea07f019cd63a19e48302eedde9dab8&#34;&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/MrRio/vtop&#34;&gt;vtop&lt;/a&gt;&lt;/strong&gt; the unknown beauty&lt;/h3&gt;

&lt;p&gt;&lt;center&gt;
    &lt;figure&gt;
        &lt;a href=&#34;http://localhost:1313/assets/images/2014-12-01/vtop.png&#34;&gt;&lt;img src=&#34;http://localhost:1313/assets/images/2014-12-01/vtop.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;
        &lt;figcaption&gt;vtop&lt;/figcaption&gt;
    &lt;/figure&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/MrRio/vtop&#34;&gt;vtop&lt;/a&gt; looks much cleaner than htop. One look and you exactly know whats going on on the system! You can list processes by CPU or Memory usage which is really awesome, you can navigate with your arrow keys or &lt;code&gt;k&lt;/code&gt; and &lt;code&gt;j&lt;/code&gt; which is also nice and the best of all you can simply highlight/select a process and kill it by typing &lt;code&gt;dd&lt;/code&gt;!&lt;/p&gt;

&lt;p&gt;You can install it also very easily through &lt;code&gt;npm&lt;/code&gt; (you need to install &lt;a href=&#34;http://nodejs.org/&#34;&gt;node.js&lt;/a&gt; on your system)!&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo npm install -g vtop
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;After that you can execute it by typing &lt;code&gt;vtop&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;I really love it! Maybe there are some use-cases where I still need &lt;code&gt;htop&lt;/code&gt; e.g. when I want to find a PID and don&amp;rsquo;t need it to kill the process, but &lt;code&gt;vtop&lt;/code&gt; is now a part of my daily used tool!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Try it out yourself!&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Let&#39;s Learn - Programmieren #3 - Netbeans &amp; Java in Linux</title>
      <link>http://localhost:1313/2013/10/27/lets-learn_programmieren-3</link>
      <pubDate>Sun, 27 Oct 2013 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/2013/10/27/lets-learn_programmieren-3</guid>
      <description>&lt;p&gt;&lt;div class=&#34;video embed video-player&#34;&gt;
&lt;iframe class=&#34;youtube-player&#34; type=&#34;text/html&#34; src=&#34;http://www.youtube.com/embed/4WahwewBgDs&#34; allowfullscreen frameborder=&#34;0&#34;&gt;
&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Ubuntu 13.04 - Ein besserer File-Browser</title>
      <link>http://localhost:1313/2013/04/30/ubuntu_pantheon-files</link>
      <pubDate>Tue, 30 Apr 2013 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/2013/04/30/ubuntu_pantheon-files</guid>
      <description>

&lt;p&gt;&lt;center&gt;
    &lt;figure&gt;
        &lt;a href=&#34;http://localhost:1313/assets/images/2013-04-30/Arbeitsfläche-1_002.png&#34;&gt;&lt;img src=&#34;http://localhost:1313/assets/images/2013-04-30/Arbeitsfläche-1_002.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;
        &lt;figcaption&gt;Pantheon Files&lt;/figcaption&gt;
    &lt;/figure&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;Diejenigen unter euch, die sich schon das neue Ubuntu 13.04 geladen haben, haben sicher schon gemerkt, dass der File-Explorer neu gestaltet wurde. Im Prinzip ist es aber immer noch der gute alte Nautilus.&lt;/p&gt;

&lt;p&gt;Jeder der schon mal den Finder von Mac OS gesehen hat, hat sicher die &amp;ldquo;komische&amp;rdquo; Ansicht gesehen, die es in diesem File-Explorer gibt.&lt;/p&gt;

&lt;p&gt;Doch diese Ansicht ist kein von Apple selbst entwickelte Ansicht, sondern vielmehr ist es ein schon recht alter Standard für die Ansicht von Dateien und Ordnern (seit 1980).&lt;/p&gt;

&lt;p&gt;Diese Ansicht nennt man &lt;a href=&#34;http://en.wikipedia.org/wiki/Miller_columns&#34;&gt;Miller Columns&lt;/a&gt; diese Ansicht ist besonders effizient und übersichtlich um mit Dateien zu arbeiten.&lt;/p&gt;

&lt;p&gt;Das ist so ziemlich der Hauptgrund wieso ich nach einem alternativen File-Browser gesucht hab.&lt;/p&gt;

&lt;p&gt;Und mit &lt;a href=&#34;https://launchpad.net/pantheon-files&#34;&gt;Pantheon-Files&lt;/a&gt; einem Fork von &lt;a href=&#34;https://launchpad.net/marlin&#34;&gt;Marlin&lt;/a&gt; ist und auch im Gegensatz zu Marlin aktiv entwickelt wird, wurde ich fündig!&lt;/p&gt;

&lt;p&gt;Ich kann euch diesen Filebrowser nur wärmstens empfehlen!&lt;/p&gt;

&lt;h3 id=&#34;installation:66744ec3ab086fa0a24dec09d9a0a5b4&#34;&gt;Installation:&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo add-apt-repository ppa:elementary-os/daily
sudo apt-get update
sudo apt-get install pantheon-files
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Danach solltet ihr es per Terminal starten, da der Ubuntu-Launcher beide Explorer unter demselben Namen führt.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pantheon-files
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Danach könnt ihr den Explorer in eurem Launcher verankern und dann mit Strg+C den Prozess beenden.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Thinklight Script für Linux</title>
      <link>http://localhost:1313/2013/04/29/thinklight-script-f%C3%BCr-linux</link>
      <pubDate>Mon, 29 Apr 2013 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/2013/04/29/thinklight-script-f%C3%BCr-linux</guid>
      <description>

&lt;p&gt;Wolltet ihr schon immer mal das LED-Licht in einem Script benutzen, oder es einfach nur per Terminal-Befehl an- und ausschalten?&lt;/p&gt;

&lt;p&gt;Wenn ja dann hab ich hier eine Lösung für euch:&lt;/p&gt;

&lt;h3 id=&#34;1-voraussetungen-prüfen:9fda1d7fdf802a2767563d8649c62eb6&#34;&gt;1. Voraussetungen prüfen:&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;    lsmod | grep pad
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;sollte ungefähr so aussehen:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;thinkpad_acpi          81222  0 
nvram                  14362  1 thinkpad_acpi
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;falls nicht kann man das Kernel-Modul damit nachinstallieren:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo modprobe -v thinkpad-acpi
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;2-script-installieren:9fda1d7fdf802a2767563d8649c62eb6&#34;&gt;2. Script installieren&lt;/h3&gt;

&lt;p&gt;Script an dem richtigen Ort herunterladen und ausführbar machen:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo wget -O /usr/local/bin/thinklight https://gist.github.com/niklas-heer/5490084/raw/990ab4c0ec70a39791b4369fddc2e12498c82cd0/thinklight
sudo chmod +x /usr/local/bin/thinklight
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;3-script-benutzen:9fda1d7fdf802a2767563d8649c62eb6&#34;&gt;3. Script benutzen&lt;/h3&gt;

&lt;p&gt;Zum Anschalten:
&lt;code&gt;sudo thinklight on&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Zum Abschalten:
&lt;code&gt;sudo thinklight off&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Und hier noch das Script selbst ;D&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;#!/bin/sh
if [ &amp;quot;$1&amp;quot; = &amp;quot;on&amp;quot; ]; then
    echo 1 &amp;gt; /sys/devices/platform/thinkpad_acpi/leds/tpacpi::thinklight/brightness 
elif [ &amp;quot;$1&amp;quot; = &amp;quot;off&amp;quot; ]; then
    echo 0 &amp;gt; /sys/devices/platform/thinkpad_acpi/leds/tpacpi::thinklight/brightness 
else
    echo &amp;quot;Error: Wrong paramater! Only on/off allowed!&amp;quot;
fi
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>